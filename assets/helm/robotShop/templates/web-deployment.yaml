apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-{{ .Values.EnvironmentID }}
  labels:
    service: web-{{ .Values.EnvironmentID }}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: web-{{ .Values.EnvironmentID }}
  template:
    metadata:
      labels:
        service: web-{{ .Values.EnvironmentID }}
    spec:
      {{ if .Values.psp.enabled }}
      serviceAccountName: robot-shop-{{ .Values.EnvironmentID }}
      {{ end }}
      containers:
      - name: web-{{ .Values.EnvironmentID }}
        image: {{ .Values.image.repo }}/rs-web:{{ .Values.image.version }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: CATALOGUE_HOST
            value: catalogue-{{ .Values.EnvironmentID }}
          - name: USER_HOST
            value: user-{{ .Values.EnvironmentID }}
          - name: CART_HOST
            value: cart-{{ .Values.EnvironmentID }}
          - name: SHIPPING_HOST
            value: shipping-{{ .Values.EnvironmentID }}
          - name: PAYMENT_HOST
            value: payment-{{ .Values.EnvironmentID }}
          - name: RATINGS_HOST
            value: ratings-{{ .Values.EnvironmentID }}
          - name: INSTANA_SERVICE_NAME
            value: nginx-web-{{ .Values.EnvironmentID }}
          {{- if .Values.eum.key }}
          - name: INSTANA_EUM_KEY
            value: {{ .Values.eum.key }}
          - name: INSTANA_EUM_REPORTING_URL
            value: {{ .Values.eum.url }}
          {{- end}}
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      restartPolicy: Always
